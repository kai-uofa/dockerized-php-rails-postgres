version: '3.8'

services: 
  development:
    build:
      context: .
      dockerfile: ./Dockerfiles/Dockerfile.dev
      args:
        ruby_version: ${RUBY_VERSION}
        rails_directory: ${RAILS_DIRECTORY}
        php_directory: ${PHP_DIRECTORY}
    image: me-dev-api
    container_name: me-dev-api
    env_file:
      - ./env-variables/development.env
    volumes:
      # binding volume for PHP api
      - ../${PHP_DIRECTORY}:/var/www/html:cached
      # binding volume for Rails
      - ../${RAILS_DIRECTORY}:/${RAILS_DIRECTORY}:cached
    ports:
      - 4567:80
    depends_on: 
      - database
    networks: 
      me-dev-network:
        ipv4_address: 172.20.0.101
    
  database:
    image: postgres
    container_name: me-dev-postgres
    restart: always
    env_file:
      - ./env-variables/database.env
    volumes: 
      # [Do Not Change] binding volume for init.sql
      - ./dev-configs/db_init.sh:/docker-entrypoint-initdb.d/db_init.sh
      # binding volume for Postgres database
      - ../${POSTGRES_DIRECTORY}:/var/lib/postgresql/data
    ports: 
      - 9999:5432
    networks: 
      me-dev-network:
        ipv4_address: 172.20.0.102
  
  # This service uses official image from dockerhub. No RVM
  # ruby_rails:
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfiles/Dockerfile.rails
  #   command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
  #   image: me-ruby-rails
  #   container_name: me-ruby-rails
  #   depends_on: 
  #     - database
  #   env_file:
  #     - ./env-variables/development.env
  #   volumes: 
  #     - ../${RAILS_DIRECTORY}:/${RAILS_DIRECTORY}:cached
  #   ports:
  #     - 3000:3000
  #   networks: 
  #     me-dev-network:
  #       ipv4_address: 172.20.0.103

networks: 
  me-dev-network:
    name: me-dev-network
    driver: bridge
    ipam:
      config: 
      - subnet: 172.20.0.0/24